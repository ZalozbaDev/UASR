## UASR: Unified Approach to Speech Synthesis and Recognition
## - Data packaging tool for hardware recognizer
##
## AUTHOR : Frank Duckhorn

65536  var nF_MEL;

function -PACK_mel()
{
	"$[.sDirDsp]/MEL_N.BIN" var sMELN;
	"$[.sDirDsp]/MEL_M.BIN" var sMELM;
	"$[.sDirDsp]/MEL_Z.BIN" var sMELZ;
	"\n   Packing mel-filter files ($[.sDirDsp]/MEL_[NMZ].BIN)."         -MSG; # Protocol
	
	data dMELN;
	data dMELM;
	data dMELZ;

	# TODO: extract data from .__FEA_iPfa => m_lpCnvc (.norm, .z, .a)
	{ 6 6 6 6 6 6 6 6 6 7 8 8 8 8 8 8 8 8 8 8 10 14 18 22 26 30 34 38 42 44 } dMELN =;
	{ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 } dMELZ =;

	data dL; { 6 6  6  6  6  6  6  6  6  6  8  8  8  8  8  8  8  8  8  8  8 12 16  20  24  28  32  36  40  44 44 } dL =;
	data dO; { 6 9 12 15 18 21 24 27 30 33 37 41 45 49 53 57 61 65 69 73 77 83 91 101 113 127 143 161 181 203 } dO =;
	-type double 512 30 dMELM -array;
	var k;
	0 var i; i dO.dim < while;
		0 k =; k :dL[0,i]: < while;
			:dMELM[i,dO[0,i]-dL[0,i  ]+1+k]=(k+1)/dL[0,i];
		k ++=; end;
		0 k =; k :dL[0,i+1]: < while;
			:dMELM[i,dO[0,i]+dL[0,i+1]-1-k]=(k+1)/dL[0,i+1];
		k ++=; end;
	i ++=; end;

	:1./dMELN: .nF_MEL dMELN -QUANT_ushort;
	sMELN "raw" dMELN stdfile -export;

	dMELM .nF_MEL dMELM -QUANT_ushort;
	sMELM "raw" dMELM stdfile -export;

	dMELZ .nF_MEL dMELZ -QUANT_short;
	sMELZ "raw" dMELZ stdfile -export;

	" ok"                                                   -MSG; # Protocol
}

