## UASR: Unified Approach to Speech Synthesis and Recognition
## - Data packaging functions for ssmg demonstrator
##
## AUTHOR : Frank Duckhorn
## PACKAGE: uasr/scripts/dlabpro/tools/include/recpack_ssmg

## Copyright 2013-2016 UASR contributors (see COPYRIGHT file)
## - Chair of Communications Engineering, BTU Cottbus-Senftenberg
## - Fraunhofer IKTS, Dresden
## - Chair of System Theory and Speech Technology, TU Dresden
##
## This file is part of UASR.
##
## UASR is free software: you can redistribute it and/or modify it under the
## terms of the GNU Lesser General Public License as published by the Free
## Software Foundation, either version 3 of the License, or (at your option)
## any later version.
##
## UASR is distributed in the hope that it will be useful, but WITHOUT ANY
## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
## details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with UASR. If not, see <http://www.gnu.org/licenses/>.

#@uasrdoc: ignore

1024  var nF_PCAN;
32768 var nF_PCAM;

function -PACK_pca(iFI,nDim,sExt)
{
	"$[.sDirDsp]/PCA$[sExt]_M.BIN" var sPCAM;
	"$[.sDirDsp]/PCA$[sExt]_N.BIN" var sPCAN;
	"\n   Packing feainfo file ($[.sDirDsp]/PCA$[sExt]_[MN].BIN)."         -MSG; # Protocol
	
	data idSwap;
	sExt "" == if;                                              # Not for VAD feainfo
		data idAux;
		-type int 1 iFI.idX.dim idSwap -array;                  # Generate Swap matrix
		0 1 idSwap -fill;                                       # for reordering delta values
		idSwap :idSwap.nrec/2: 2 idSwap -reshape;
		:idSwap[1]: :idSwap.nrec/2: 2 idAux -reshape;
		idAux ' idSwap.nrec 1 idAux -reshape;
		idAux 0 1 1 idSwap -xstore;
		idSwap ' :idSwap.nrec*2: 1 idSwap -reshape;
		:idSwap.nrec/4: var nSub;
	end;

	data dPCAN; iFI.idX ' dPCAN =;
	dPCAN .nF_PCAN dPCAN -QUANT_short;
	sExt "" == if;                                              # Not for VAD feainfo
		:nSub*2: nSub dPCAN /rec -xfetch 2 ./
			0 nSub :nSub*2: dPCAN /rec -xstore;
		:nSub*3: nSub dPCAN /rec -xfetch 4 ./
			0 nSub :nSub*3: dPCAN /rec -xstore;
		idSwap 0 dPCAN 0 dPCAN.dim dPCAN -lookup;
	end;
	sPCAN "raw" dPCAN stdfile -export;

	data dPCAM; iFI.idW 0 nDim dPCAM -select;
	dPCAM .nF_PCAM dPCAM -QUANT_short;
	sExt "" == if;                                              # Not for VAD feainfo
		:nSub*2: nSub dPCAM /rec -xfetch 2 .*
			0 nSub :nSub*2: dPCAM /rec -xstore;
		:nSub*3: nSub dPCAM /rec -xfetch 4 .*
			0 nSub :nSub*3: dPCAM /rec -xstore;
		idSwap 0 dPCAM 0 dPCAM.dim dPCAM -lookup;
	end;
	dPCAM ' -type short dPCAM -tconvert;
	sPCAM "raw" dPCAM stdfile -export;

	" ok"                                                   -MSG; # Protocol
}

